# SOLID

1. Single Responsibility Principle
2. Open/Closed Principle
3. Liskov Substitution Principle
4. Interface Segregation Principle
5. Dependency Inversion Principle

-----
 
1. Cada classe tem uma responsabilidade unica.
2. As classes da aplicação devem ser abertas para extensão mas fechadas para modificação.
3. Nós devemos poder subistituir uma classe pai por uma herança dela e tudo continuar funcionando.
4. Segregar interfaces o maximo possivel
5. Receber do mundo externo uma função que nao depende da função atual 